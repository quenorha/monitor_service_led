#!/bin/bash

# Usage: ./monitor_service_led service LEDID
# exemple: monitor_service_led lighttpd U1
#eventmsg 0x40010N0C
#Where N is LED number(0 to 6), and C the color (0 : OFF, 1 : GREEN, 2 : RED, 3 : YELLOW).
#GREEN : Container running
#ORANGE : Container stopped
#RED : Container does not exist
#
#export VISUAL=nano; crontab -e (open crontab with nano by default)
#* * * * *  /path/to/monitor_service_led lighttpd U1
#

usage(){ 
    echo "Usage: ./monitor_service_led -s SERVICE -l LEDID [-d] "
	echo "" 	
	echo "This script will display the service or container status on a LED"
	echo "  GREEN : Container or service running"
	echo "  ORANGE : Container or service stopped "
	echo "  RED : Container does not exist or Docker not installed/started (not used for service)"
	echo "" 
    echo "-h : display this help" 
    echo "-s : service name or container name if -d option is used" 
	echo "-l : Led ID where service status should be displayed. Acceptable values : U1 - U7 depending on the platform" 
	echo "-d : argument to provide if the service to monitor is a Docker container"
	echo "" 
	echo "Example 1 : monitor lighttpd web server status : ./monitor_service_led -s lighttpd -l U1" 
	echo "Example 2 : monitor mosquitto container status : ./monitor_service_led -s mosquitto -l U1 -d" 
} 

DOCKER=0;

while getopts l:dhs: flag
do
    case "${flag}" in
        l) LED=${OPTARG};;
        d) DOCKER=1;;
        s) SERVICE=${OPTARG};;
		h) usage
		    exit;;
    esac
done

#SERVICE=$1
#LED=$2

case "$LED" in
   "U1") ledid="0x400100"
      ;;
   "U2") ledid="0x400101"
      ;;
   "U3") ledid="0x400102"
      ;;
   "U4") ledid="0x400103"
      ;;
   "U5") ledid="0x400104"
      ;;
   "U6") ledid="0x400105"
      ;;
   "U7") ledid="0x400106"
      ;;
   *)
     ledid="0x400100"
     ;;
esac

if [ "$DOCKER" -eq "1" ]; then

       which docker >/dev/null

       if [ $? -eq 0 ]
       then
	   
		if ! docker info > /dev/null 2>&1; then
		    echo "CRITICAL - Docker not started!"
			  eventmsg "${ledid}02"
			  exit 3
			else
	   
			RUNNING=$(docker inspect --format="{{ .State.Running }}" $SERVICE 2> /dev/null)
			if [ $? -eq 1 ]; then
			  echo "UNKNOWN - $SERVICE does not exist."
			  eventmsg "${ledid}02"
			  exit 3
			fi

			if [ "$RUNNING" == "false" ]; then
			  echo "CRITICAL - $SERVICE is not running."
			  eventmsg "${ledid}03"
			  exit 2

			else
			  eventmsg "${ledid}01"
			  echo "OK - $SERVICE is running"
			fi
		   exit;
		   fi
       else
         echo "install docker" >&2
		  echo "CRITICAL - Docker not installed !"
			  eventmsg "${ledid}02"
			  exit 3
       fi
          
	   
else
   if pidof "$SERVICE" >/dev/null
	then
		echo "OK - $SERVICE is running"
		eventmsg "${ledid}01"
		echo "${ledid}01"
	else
		echo "CRITICAL - $SERVICE stopped"
		eventmsg "${ledid}03"
		echo "${ledid}03"
		exit 3
fi
fi
